; Copyright 2013 Timothy Baldwin
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:CPU.Arch
        GET     Hdr:Machine.<Machine>
        GET     Hdr:HALSize.<HALSize>
        GET     Hdr:ImageSize.<ImageSize>
        GET     Hdr:UserIF.<UserIF>
        $GetCPU
        $GetIO
        $GetMEMC
        $GetMEMM
        $GetVIDC
        GET     Hdr:Sprite

        GET     hdr.Options
        GET     hdr.VduExt
        GET     hdr.PublicWS
        GET     hdr.VIDCList
        GET     hdr.KernelWS
        GET     hdr.OSMem

        MACRO
        DEFINE  $name
        DCB     "#define $name (0x", :STR:($name), ")" , 10
        MEND

        MACRO
        ZP      $type, $name
        DCB     "#define $name (*($type *)(ZeroPage + 0x", :STR:($name), "))" , 10
        MEND

        ;MACRO
        ;HAL     $rtype, $rout, $args
        ;DCB     "typedef $rtype (*$rout", "_t)($args);", 10
        ;DCB     "#define $rout (($rout", "_t)0x", :STR:(HALWorkspace - 4 * (EntryNo_$rout + 1)), ")", 10
        ;MEND
        ;HAL     "void", "HAL_Init", "unsigned int *riscos_header, void *unacheable_ws"

        AREA    Header, DATA, READONLY

        DCB     "#ifndef KERNEL_H", 10
        DCB     "#define KERNEL_H", 10

        DEFINE  ZeroPage
        DEFINE  ScratchSpace
        DEFINE  ScratchSpaceSize

        DEFINE  CursorChunkAddress
        DEFINE  TopOfDMAWorkSpace

        ZP      uint32_t, RAMLIMIT
        ZP      uint32_t, MemLimit

        DEFINE  MaxInterrupts
        ZP      uint32_t*, AMBControl_ws

        ASSERT  DANode_Link = 0 ; because DAList has only link
        ZP      "struct DANode*", DAList
        ZP      "struct DANode", AppSpaceDANode
        ZP      "struct DANode", FreePoolDANode
        ZP      uint32_t, CDASemaphore

        DCB     "#endif", 10

        WHILE   ((. - Header) :AND: 3) != 0
        DCB     10
        WEND

        END
